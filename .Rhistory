condsMesh %>% collect()
condsCond %>% collect()
filter_datse
condsTitle <- study_tbl %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
condsTitle
filter_dates <- study_tbl %>% filter((start_date >= startDate) & filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|"))))
filter_dates
condsTitle <- study_tbl %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|"))) %>% collapse()
condsTitle <- study_tbl %>% filter(str_detect(tolower(official_title),pattern = str_flatten(termsSearchCondTitle,collapse="|"))) %>% collapse()
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id))
study_tbl_description = tbl(src=con, 'detailed_descriptions')
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id))
filtered_table
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id))
filtered_table
study_tbl_description
condsMesh
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id)) %>% collect()
filtered_table = study_tbl_description %>% filter(nct_id %in% condsMesh$nct_id) %>% collect()
library(RPostgreSQL)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
strings = c('black','asian','african american','hispanic')
startDate = as.Date("2009-01-01")
termsSearchMesh = c('hypertension','blood pressure','prehypertension')
termsSearchCondTitle = c('blood pressure','diastolic','systolic','hypertension')
countriesList = c("United States")
`%nin%` = Negate(`%in%`)
drv <- dbDriver('PostgreSQL')
con <- dbConnect(drv, dbname="aact",host="aact-db.ctti-clinicaltrials.org", port=5432, user="djcald", password="DD968radford")
study_tbl = tbl(src=con,'studies')
filter_dates <- study_tbl %>% filter(start_date >= startDate)
location_tbl = tbl(src=con,'countries')
locations <- location_tbl %>% filter(name %in% countriesList) %>% collect()
study_tbl_browse_conditions = tbl(src=con, 'browse_conditions')
condsMesh <- study_tbl_browse_conditions %>% filter(tolower(mesh_term) %in% termsSearchMesh) %>% collect()
study_tbl_conditions = tbl(src=con, 'conditions')
condsCond <- study_tbl_conditions %>% filter(downcase_name %in% termsSearchCondTitle) %>% collect()
study_tbl_description = tbl(src=con, 'detailed_descriptions')
condsCOnd
condsMesh
study_tbl_description
filtered_table = study_tbl_description %>% filter(nct_id %in% condsMesh$nct_id) %>% collect()
condsTitle <- study_tbl %>% filter(str_detect(tolower(official_title),pattern = str_flatten(termsSearchCondTitle,collapse="|")))
condsTitle
condsTitle <- study_tbl %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
condsTitle
filter_dates <- study_tbl %>% filter(start_date >= startDate) %>% select(start_date,official_title,description)
filter_dates
condsTitle <- filter_dates %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
filter_dates <- study_tbl %>% filter(start_date >= startDate)
condsTitle <- filter_dates %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
condsTitle
filter_dates <- study_tbl %>% filter(start_date >= startDate) %>% select(official_title,start_date) %>% collect()
filter_Dates
filter_dates
condsTitle <- filter_dates %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
condsTitle
study_tbl_description = tbl(src=con, 'detailed_descriptions')
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id) | (nct_id %in% condsTitle$nct_id)) %>% collect()
#filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id))
#filtered_table = study_tbl_description %>% filter(nct_id %in% condsMesh$nct_id) %>% collect()
study_tbl_description
filter_dates <- study_tbl %>% filter(start_date >= startDate) %>% select(official_title,start_date,nct_id) %>% collect()
filter_dates
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id) | (nct_id %in% condsTitle$nct_id)) %>% collect()
condsTitle
condsTitle <- filter_dates %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id) | (nct_id %in% condsTitle$nct_id)) %>% collect()
filtered_table
library(RPostgreSQL)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
strings = c('black','asian','african american','hispanic')
startDate = as.Date("2009-01-01")
termsSearchMesh = c('hypertension','blood pressure','prehypertension')
termsSearchCondTitle = c('blood pressure','diastolic','systolic','hypertension')
countriesList = c("United States")
`%nin%` = Negate(`%in%`)
drv <- dbDriver('PostgreSQL')
con <- dbConnect(drv, dbname="aact",host="aact-db.ctti-clinicaltrials.org", port=5432, user="djcald", password="DD968radford")
study_tbl = tbl(src=con,'studies')
filter_dates <- study_tbl %>% filter(start_date >= startDate) %>% select(official_title,start_date,nct_id,phase) %>% collect()
location_tbl = tbl(src=con,'countries')
locations <- location_tbl %>% filter(name %in% countriesList) %>% collect()
facilities_tbl = tbl(src=con,'countries')
facilities <- facilities_tbl %>% collect()
facilities
facilities_tbl = tbl(src=con,'facilities')
facilities <- facilities_tbl %>% collect()
facilities
facilities_tbl
facilities_tabulated <- facilities %>% group_by(nct_id) %>% tally()
facilities_tabulated
histogram(facilities_tabulated)
hist(facilities_tabulated)
library(RPostgreSQL)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
strings = c('black','asian','african american','hispanic')
startDate = as.Date("2009-01-01")
termsSearchMesh = c('hypertension','blood pressure','prehypertension')
termsSearchCondTitle = c('blood pressure','diastolic','systolic','hypertension')
countriesList = c("United States")
`%nin%` = Negate(`%in%`)
drv <- dbDriver('PostgreSQL')
con <- dbConnect(drv, dbname="aact",host="aact-db.ctti-clinicaltrials.org", port=5432, user="djcald", password="DD968radford")
study_tbl = tbl(src=con,'studies')
filter_dates <- study_tbl %>% select(official_title,start_date,nct_id,phase) %>% filter(start_date >= startDate)  %>% collect()
sponsor_tbl = tbl(src=con,'sponsors')
sponsor <- sponsor_tbl %>% select(ncd_id,agency_class) %>% filter(name %in% countriesList) %>% collect()
sponsor <- sponsor_tbl %>% select(nct_id,agency_class) %>% filter(name %in% countriesList) %>% collect()
sponsor <- sponsor_tbl %>% select(nct_id,agency_class) %>% collect()
sponsor
study_tbl = tbl(src=con,'studies')
filter_dates <- study_tbl %>% select(official_title,start_date,nct_id,phase) %>% filter(start_date >= startDate)  %>% copy()
filter_dates <- study_tbl %>% select(official_title,start_date,nct_id,phase) %>% filter(start_date >= startDate)  %>% compute()
sponsor <- sponsor_tbl %>% select(nct_id,agency_class) %>% compute()
sponsor
library(RPostgreSQL)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
strings = c('black','asian','african american','hispanic')
startDate = as.Date("2009-01-01")
termsSearchMesh = c('hypertension','blood pressure','prehypertension')
termsSearchCondTitle = c('blood pressure','diastolic','systolic','hypertension')
countriesList = c("United States")
`%nin%` = Negate(`%in%`)
drv <- dbDriver('PostgreSQL')
con <- dbConnect(drv, dbname="aact",host="aact-db.ctti-clinicaltrials.org", port=5432, user="djcald", password="DD968radford")
study_tbl = tbl(src=con,'studies')
filter_dates <- study_tbl %>% select(official_title,start_date,nct_id,phase) %>% filter(start_date >= startDate)  %>% collect()
location_tbl = tbl(src=con,'countries')
locations <- location_tbl %>% select(nct_id,name) %>% filter(name %in% countriesList) %>% collect()
sponsor_tbl = tbl(src=con,'sponsors')
sponsor <- sponsor_tbl %>% select(nct_id,agency_class) %>% collect()
facilities_tbl = tbl(src=con,'facilities')
facilities <- facilities_tbl %>% select(nct_id,status,name) %>%collect()
facilities_tabulated <- facilities %>% group_by(nct_id) %>% tally()
study_tbl_browse_conditions = tbl(src=con, 'browse_conditions')
condsMesh <- study_tbl_browse_conditions %>% select(nct_id,mesh_term) %>% filter(tolower(mesh_term) %in% termsSearchMesh) %>% collect()
study_tbl_conditions = tbl(src=con, 'conditions')
condsCond <- study_tbl_conditions %>% select(nct_id,downcase_name) %>%filter(downcase_name %in% termsSearchCondTitle) %>% collect()
condsTitle <- filter_dates %>% filter(str_detect(tolower(official_title),pattern = paste(termsSearchCondTitle,collapse="|")))
study_tbl_description = tbl(src=con, 'detailed_descriptions')
filtered_table = study_tbl_description %>% select(nct_id,description) %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id) | (nct_id %in% condsTitle$nct_id)) %>% collect()
#filtered_table = study_tbl_description %>% filter((nct_id %in% condsMesh$nct_id) | (nct_id %in% condsCond$nct_id))
#filtered_table = study_tbl_description %>% filter(nct_id %in% condsMesh$nct_id) %>% collect()
filtered_tab;e
filtered_table
join_all
library(plyr)
library(dplyr)
library(dplyr)
joinedTable %>% join_all(list(filtered_table,facilities_tabulated,sponsor,filter_dates,locations),by=nct_id)
joinedTable <- join_all(list(filtered_table,facilities_tabulated,sponsor,filter_dates,locations),by='nct_id',type="inner")
joinedTable
rm(condsCond,condsMesh)
rm(drv)
rm(facilitis)
rm(facilities)
library(RPostgreSQL)
drv <- dbDriver('PostgreSQL')
con <- dbConnect(drv, dbname="aact",host="aact-db.ctti-clinicaltrials.org", port=5432, user="djcald", password="DD968radford")
aact_sample <- dbGetQuery(con, "select distinct study_type from studies")
#########################################
# set working directory for your machine
setwd("C:/Users/david/SharedCode/aact")
#########################################
# load libraries
library(tidyr)
library(RPostgreSQL)
library(plyr)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(ggsci)
library(gridExtra)
#########################################
# create search parameters
#strings = c('black','asian','african american','hispanic')
stringBlack = c('black','african american')
stringHisp = c('hispanic','latino','latina')
stringAsian = c('non-hispanic asian','asian american','asian-american','asian')
startDate = as.Date("2009-01-01")
startDateEnd = as.date("2018-12-31")
termsSearchMesh = c('hypertension','blood pressure','prehypertension')
termsSearchCondTitle = c('blood pressure','diastolic','systolic','hypertension')
countriesList = c("United States")
`%nin%` = Negate(`%in%`)
#########################################
# boolean options for saving
savePlot = FALSE
loadExcel = FALSE
loadRdataFile = TRUE
if (loadExcel){
joinedTable <- read.csv(file="C:/Users/david/SharedCode/aact/htnTableTotalNoDescrip_12_9_2019.csv", header=TRUE, sep=",",na.strings=c(""))
}
if (loadRdataFile){
joinedTable <- readRDS(file="C:/Users/david/SharedCode/aact/htnRdata_12_9_2019.rds")
}
# double check that no trials are double counted
doubleCounts <- joinedTable %>% group_by(nct_id) %>% summarise(count=n())
unique(doubleCounts$count)
joinedTableCount <- joinedTable %>% group_by(yearStart,diverse) %>% tally()
joinedTableCount <- rename(joinedTableCount,yearlyCount = n)
joinedTableCountGroup <- joinedTable %>% group_by(yearStart,diverseGroup) %>% count()
joinedTableCountGroup <- rename(joinedTableCountGroup,yearlyCount = n)
endedTrials = c("terminated","withdrawn")
joinedTableDiverseDiscontinued <- joinedTable %>% filter((diverseGroup == "Diverse") & str_detect(tolower(overall_status),pattern = paste(endedTrials,collapse="|"))) %>% collect()
# calculate statistics
joinedTableTotals <- joinedTable %>% group_by(diverse) %>% tally()
joinedTableSummarizeInterv <- joinedTable %>% group_by(diverse,interventionType) %>% tally()
joinedTableSummarizeType <- joinedTable %>% group_by(diverse,study_type) %>% tally()
joinedTableSummarizePhase <- joinedTable %>% group_by(diverse,phase) %>% tally()
joinedTableSummarizeAgency <- joinedTable %>% group_by(diverse,funding) %>% tally()
joinedTableSummarizeReported <- joinedTable %>% group_by(diverse,were_results_reported) %>% tally()
joinedTableSummarizeSite<- joinedTable %>% group_by(diverse,multisite) %>% tally()
joinedTableSummarizeStatus<- joinedTable %>% group_by(diverse,last_known_status) %>% tally()
joinedTableSummarizeOverallStatus <- joinedTable %>% group_by(diverse,overall_status) %>% tally()
joinedTableSummarizePubCount <- joinedTable %>% group_by(diverse,pubCountBool) %>% tally()
# calculate ratio of diverse to non diverse
joinedTableRatio <- data.frame(year = unique(joinedTableCountGroup$yearStart))
joinedTableRatio$ratio = joinedTableCountGroup[joinedTableCountGroup$diverseGroup == 'Diverse',]$yearlyCount/joinedTableCountGroup[joinedTableCountGroup$diverseGroup == 'General',]$yearlyCount
joinedTableRatio$ratioTotal = joinedTableCountGroup[joinedTableCountGroup$diverseGroup == 'Diverse',]$yearlyCount/(joinedTableCountGroup[joinedTableCountGroup$diverseGroup == 'General',]$yearlyCount + joinedTableCountGroup[joinedTableCountGroup$diverseGroup == 'Diverse',]$yearlyCount)
joinedTableRatio$groupRatio = 'Ratio'
joinedTableRatio$label = (1:length(joinedTableRatio$year))
#########################################
# statistical testing
yearlyCount = joinedTableCountGroup$yearlyCount
lengthYC= length(yearlyCount)
chiSquareData = matrix(c(yearlyCount[1],yearlyCount[2],yearlyCount[lengthYC-1],yearlyCount[lengthYC]),nrow=2,byrow = TRUE)
colnames(chiSquareData) <- c("Diverse","General")
rownames(chiSquareData) <- c("2009","2018")
chiSquareData <- as.table(chiSquareData)
chisq.test(chiSquareData)
lmRatio <- lm(ratio~label,data=joinedTableRatio)
summary(lmRatio)
#########################################
# make plots
pInd<-ggplot(joinedTableCount, aes(x=yearStart,y=yearlyCount, group=diverse, color=diverse)) +
geom_line()+
geom_point() +
labs(title='Number of Trials by Race Group Enrolled',x = "Year Registered",y="Number of Trials") +
# scale_y_continuous(breaks=seq(0,250,10)) +
ylim(0,max(joinedTableCount$yearlyCount)+10) +
scale_x_continuous(breaks=seq(2009,2018,1),limits=c(2009,2018)) +
scale_color_jama() +
labs(color = 'Race-Specific Enrollment ')
print(pInd)
if (savePlot){
ggsave("trialsByYearConditions_12_9_2019.png", units="in", width=5, height=4, dpi=600)
}
pComb<-ggplot(joinedTableCountGroup, aes(x=yearStart,y=yearlyCount, group=diverseGroup, color=diverseGroup)) +
geom_line()+
geom_point() +
labs(x = "year",y="count",color = 'Race-Specific Enrollment ') +
#scale_y_continuous(breaks=seq(0,250,10)) +
ylim(0,max(joinedTableCount$yearlyCount)+10) +
scale_x_continuous(breaks=seq(2009,2018,1),limits=c(2009,2018)) +
scale_color_jama()
print(pComb)
if (savePlot){
ggsave("trialsByYearConditionsComb_12_9_2019.png", units="in", width=5, height=4, dpi=600)
}
pRatio<-ggplot(joinedTableRatio, aes(x=year,y=ratio)) +
geom_line(color='steelblue')+
geom_point(color='steelblue') +
labs(title='Ratio of Diverse Trials over Time',x = "Year Registered",y="Ratio of Diverse to General Trials") +
scale_x_continuous(breaks=seq(2009,2018,1),limits=c(2009,2018)) +
ylim(0,max(joinedTableRatio$ratio)+0.015)
print(pRatio)
if (savePlot){
ggsave("trialsByYearRatio_12_9_2019.png", units="in", width=5, height=4, dpi=600)
}
pRatioTotal<-ggplot(joinedTableRatio, aes(x=year,y=ratioTotal)) +
geom_line(color='steelblue')+
geom_point(color='steelblue') +
labs(x = "Year Registered",y="Ratio of Diverse to All Trials") +
scale_x_continuous(breaks=seq(2009,2018,1),limits=c(2009,2018)) +
ylim(0,max(joinedTableRatio$ratio)+0.015) +
scale_color_jama()
print(pRatioTotal)
if (savePlot){
ggsave("trialsByYearRatioTotal_12_9_2019.png", units="in", width=5, height=4, dpi=600)
}
grid.arrange(pInd,pRatio,ncol=2)
pComb <- arrangeGrob(pInd,pRatio,ncol=2)
#pComb <- plot_grid(pInd,pRatio,ncol=2,rel_widths = c(5/9,4/9))
#print(pComb)
if (savePlot){
ggsave(file="trialsByYearConditionsGrid_12_9_2019.png",pComb, units="in", width=10, height=4, dpi=600)
}
prow <- plot_grid(pInd + theme(legend.position = "none"),
NULL,
pRatio + theme(legend.position = "none"),
align='vh',
hjust = -1,
nrow=1,
rel_widths = c(1,0.4,1))
legend <- get_legend(pInd + theme(legend.box.margin=margin(0,0,0,12)))
pTotal <- prow + draw_grob(legend,2/4.5,0,.3/3.3,1)
print(pTotal)
save_plot('trialsByYearConditionsGrid_12_9_2019.png', pTotal, ncol = 2, nrow = 1, base_height = 4, base_width=6,dpi=600)
grid.arrange(pInd,pRatioTotal,ncol=2)
pCombTotal <- arrangeGrob(pInd,pRatioTotal,ncol=2)
#pComb <- plot_grid(pInd,pRatio,ncol=2,rel_widths = c(5/9,4/9))
#print(pComb)
if (savePlot){
ggsave(file="trialsByYearConditionsGridTotal_12_9_2019.png",pCombTotal, units="in", width=10, height=4, dpi=600)
}
pHist<-ggplot(joinedTable, aes(x=numMissing)) +
geom_histogram(binwidth=1,color="black", fill="white") +
labs(x = "Number of Missing Data Columns",y="Count") +
xlim(0,8)
print(pHist)
if (savePlot){
ggsave("trialsByYearNumMissing_12_9_2019.png", units="in", width=5, height=4, dpi=600)
}
joinedTableCountGroup
joinedTableSummarizeAgency
joinedTableCount
print(joinedTableCount,n=40)
joinedTable
joinedTableCoutnGroup
joinedTableCountGroup
joinedTableSummarizeInterv
doubleCounts
unique(doubleCounts$count)
joinedTable
# add in drug vs. non-drug
joinedTable <- joinedTable %>% mutate(interventionDrugNonDrug = case_when(str_detect(tolower(intervention_comb), pattern = paste('drug')) ~ 'Drug Intervention',
TRUE ~ 'Non-Drug Intervention'))
# add in industry vs. non industry
joinedTable <- joinedTable %>% mutate(industryNonIndustry = case_when(str_detect(tolower(funding), pattern = paste('Industry')) ~ 'Industry Sponsor',
TRUE ~ 'Non-Industry Sponsor'))
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=interventionDrugNonDrug)) +
geom_bar() +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~diverse)
print(pFacetDrug)
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=interventionDrugNonDrug)) +
geom_bar() +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~diverseGroup)
print(pFacetDrug)
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=interventionDrugNonDrug)) +
geom_bar(fill='blue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~diverseGroup)
print(pFacetDrug)
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=interventionDrugNonDrug)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~diverseGroup)
print(pFacetDrug)
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=diverseGroup)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~interventionDrugNonDrug)
print(pFacetDrug)
# rename race-specific
joinedTable <- joinedTable %>% mutate(raceSpecific = case_when(str_detect(diverseGroup, pattern = paste('Diverse')) ~ 'Race-Specific'
TRUE ~ 'Non-Race Specific'))
# rename race-specific
joinedTable <- joinedTable %>% mutate(raceSpecific = case_when(str_detect(diverseGroup, pattern = paste('Diverse')) ~ 'Race-Specific',
TRUE ~ 'Non-Race Specific'))
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~interventionDrugNonDrug)
print(pFacetDrug)
savePlot= TRUE
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~interventionDrugNonDrug)
print(pFacetDrug)
if (savePlot){
ggsave("trialsByRaceSpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
}
colnames(joinedTable)
# facet wrap funder
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~industryNonIndustry)
print(pFacetDrug)
if (savePlot){
ggsave("trialsByRaceSpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
unique(joinedTable$interventionDrugNonDrug)
3+3
asdjfjasdf'j;ljm'
2+2
# facet wrap funder
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~industryNonIndustry)
print(pFacetDrug)
unique(joinedTable$industryNonIndustry)
joinedTable <- joinedTable %>% mutate(industryNonIndustry = case_when(str_detect(tolower(funding), pattern = paste('industry')) ~ 'Industry Sponsor',
TRUE ~ 'Non-Industry Sponsor'))
# facet wrap funder
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~industryNonIndustry)
print(pFacetDrug)
if (savePlot){
ggsave("trialsByIndustrySpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
}
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~interventionDrugNonDrug)
print(pFacetDrug)
if (savePlot){
ggsave("trialsByRaceSpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
}
# facet wrap funder
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~industryNonIndustry)
print(pFacetDrug)
if (savePlot){
ggsave("trialsByIndustrySpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
}
grid.arrange(pFacetDrug,pFacetFund,ncol=2)
# facet wrap drug
pFacetDrug<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetDrug <- pFacetDrug + facet_wrap(~interventionDrugNonDrug)
print(pFacetDrug)
if (savePlot){
ggsave("trialsByRaceSpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
}
# facet wrap funder
pFacetFund<-ggplot(joinedTable, aes(x=raceSpecific)) +
geom_bar(fill='steelblue') +
labs(x = "",y="Count")
pFacetFund <- pFacetFund + facet_wrap(~industryNonIndustry)
print(pFacetFund)
if (savePlot){
ggsave("trialsByIndustrySpecific_2_1_2020.png", units="in", width=5, height=4, dpi=600)
}
grid.arrange(pFacetDrug,pFacetFund,ncol=2)
pComb <- arrangeGrob(pFacetDrug,pFacetFund,ncol=2)
print(pComb)
pComb <- plot_grid(pFacetDrug,pFacetFund,ncol=2))
pComb <- plot_grid(pFacetDrug,pFacetFund,ncol=2)
grid.arrange(pFacetDrug,pFacetFund,ncol=2)
grid.arrange(pFacetDrug,pFacetFund,ncol=1)
#pComb <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
#print(pComb)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pComb, units="in", width=10, height=4, dpi=600)
}
View(pComb)
pCombIndDrug <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
#print(pComb)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pComb, units="in", width=10, height=4, dpi=600)
}
pCombIndDrug <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
print(pCombIndDrug)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pComb, units="in", width=10, height=4, dpi=600)
}
grid.arrange(pFacetDrug,pFacetFund,ncol=1)
pCombIndDrug <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
print(pCombIndDrug)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pComb, units="in", width=10, height=4, dpi=600)
}
grid.arrange(pFacetDrug,pFacetFund,ncol=1)
pCombIndDrug <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
print(pCombIndDrug)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pCombIndDrug, units="in", width=10, height=4, dpi=600)
}
grid.arrange(pFacetDrug,pFacetFund,ncol=1)
pCombIndDrug <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
print(pCombIndDrug)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pCombIndDrug, units="in", width=4, height=8, dpi=600)
}
grid.arrange(pFacetDrug,pFacetFund,ncol=1)
pCombIndDrug <- arrangeGrob(pFacetDrug,pFacetFund,ncol=1)
print(pCombIndDrug)
if (savePlot){
ggsave(file="trialsDrugIndustryGrid_2_1_2019.png",pCombIndDrug, units="in", width=6, height=8, dpi=600)
}
